buildscript {

	ext {

		queryDslVersion = "5.0.0"

	}

}



plugins {

	id 'java'

	id 'org.springframework.boot' version '3.1.0'

	id 'io.spring.dependency-management' version '1.1.0'

}


group = 'org.zerock'

version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'


configurations {

	compileOnly {

		extendsFrom annotationProcessor

	}

}


repositories {

	mavenCentral()

}


dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	testCompileOnly 'org.projectlombok:lombok'

	testAnnotationProcessor 'org.projectlombok:lombok'


	implementation 'org.modelmapper:modelmapper:3.1.0'


	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'


	implementation 'org.springframework.boot:spring-boot-starter-validation'



	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'



	implementation 'net.coobird:thumbnailator:0.4.16'


	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

// https://mvnrepository.com/artifact/net.coobird/thumbnailator
	implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.1'

	implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'

	annotationProcessor(


			"jakarta.persistence:jakarta.persistence-api",


			"jakarta.annotation:jakarta.annotation-api",


			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

}


tasks.named('test') {

	useJUnitPlatform()

}


sourceSets {

	main {

		java {

			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]

		}

	}

}


compileJava.dependsOn('clean')